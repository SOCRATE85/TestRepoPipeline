{
  "version": 4,
  "terraform_version": "1.6.5",
  "serial": 52,
  "lineage": "455a126e-2b09-ca95-72dc-856f2b74c3df",
  "outputs": {},
  "resources": [
    {
      "mode": "data",
      "type": "template_file",
      "name": "install_script",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "c774e25fc8fc60e547d910e906c6e134847aa69bc54b875c6925b45342cebd8f",
            "rendered": "#3--install.sh , that will install teh packages , install jenkins in teh ec2 instance \n#!/bin/bash -xe\nsudo apt update -y\nwget -O - https://packages.adoptium.net/artifactory/api/gpg/key/public | tee /etc/apt/keyrings/adoptium.asc\necho \"deb [signed-by=/etc/apt/keyrings/adoptium.asc] https://packages.adoptium.net/artifactory/deb $(awk -F= '/^VERSION_CODENAME/{print$2}' /etc/os-release) main\" | tee /etc/apt/sources.list.d/adoptium.list\nsudo apt update -y\nsudo apt install temurin-17-jdk -y\n/usr/bin/java --version\ncurl -fsSL https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key | sudo tee /usr/share/keyrings/jenkins-keyring.asc \u003e /dev/null\necho deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] https://pkg.jenkins.io/debian-stable binary/ | sudo tee /etc/apt/sources.list.d/jenkins.list \u003e /dev/null\nsudo apt-get update -y\nsudo apt-get install jenkins -y\nsudo systemctl start jenkins\nsudo systemctl status jenkins\n\n#!/bin/bash -xe\nsudo apt update -y\nwget -O - https://packages.adoptium.net/artifactory/api/gpg/key/public | tee /etc/apt/keyrings/adoptium.asc\necho \"deb [signed-by=/etc/apt/keyrings/adoptium.asc] https://packages.adoptium.net/artifactory/deb $(awk -F= '/^VERSION_CODENAME/{print$2}' /etc/os-release) main\" | tee /etc/apt/sources.list.d/adoptium.list\nsudo apt update -y\nsudo apt install temurin-17-jdk -y\n/usr/bin/java --version\ncurl -fsSL https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key | sudo tee /usr/share/keyrings/jenkins-keyring.asc \u003e /dev/null\necho deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] https://pkg.jenkins.io/debian-stable binary/ | sudo tee /etc/apt/sources.list.d/jenkins.list \u003e /dev/null\nsudo apt-get update -y\nsudo apt-get install jenkins -y\nsudo systemctl start jenkins\nsudo systemctl status jenkins\n\n\n##Install Docker and Run SonarQube as Container -xe\nsudo apt-get update\nsudo apt-get install docker.io -y\nsudo usermod -aG docker ubuntu\nsudo usermod -aG docker jenkins  \nnewgrp docker\nsudo chmod 777 /var/run/docker.sock\ndocker run -d --name sonar -p 9000:9000 sonarqube:lts-community # standard image of somarqube \"sonarqube:lts-community\"\n\n#install trivy -xe\nsudo apt-get install wget apt-transport-https gnupg lsb-release -y\nwget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg \u003e /dev/null\necho \"deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main\" | sudo tee -a /etc/apt/sources.list.d/trivy.list\nsudo apt-get update\nsudo apt-get install trivy -y\n\n",
            "template": "#3--install.sh , that will install teh packages , install jenkins in teh ec2 instance \n#!/bin/bash -xe\nsudo apt update -y\nwget -O - https://packages.adoptium.net/artifactory/api/gpg/key/public | tee /etc/apt/keyrings/adoptium.asc\necho \"deb [signed-by=/etc/apt/keyrings/adoptium.asc] https://packages.adoptium.net/artifactory/deb $(awk -F= '/^VERSION_CODENAME/{print$2}' /etc/os-release) main\" | tee /etc/apt/sources.list.d/adoptium.list\nsudo apt update -y\nsudo apt install temurin-17-jdk -y\n/usr/bin/java --version\ncurl -fsSL https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key | sudo tee /usr/share/keyrings/jenkins-keyring.asc \u003e /dev/null\necho deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] https://pkg.jenkins.io/debian-stable binary/ | sudo tee /etc/apt/sources.list.d/jenkins.list \u003e /dev/null\nsudo apt-get update -y\nsudo apt-get install jenkins -y\nsudo systemctl start jenkins\nsudo systemctl status jenkins\n\n#!/bin/bash -xe\nsudo apt update -y\nwget -O - https://packages.adoptium.net/artifactory/api/gpg/key/public | tee /etc/apt/keyrings/adoptium.asc\necho \"deb [signed-by=/etc/apt/keyrings/adoptium.asc] https://packages.adoptium.net/artifactory/deb $(awk -F= '/^VERSION_CODENAME/{print$2}' /etc/os-release) main\" | tee /etc/apt/sources.list.d/adoptium.list\nsudo apt update -y\nsudo apt install temurin-17-jdk -y\n/usr/bin/java --version\ncurl -fsSL https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key | sudo tee /usr/share/keyrings/jenkins-keyring.asc \u003e /dev/null\necho deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] https://pkg.jenkins.io/debian-stable binary/ | sudo tee /etc/apt/sources.list.d/jenkins.list \u003e /dev/null\nsudo apt-get update -y\nsudo apt-get install jenkins -y\nsudo systemctl start jenkins\nsudo systemctl status jenkins\n\n\n##Install Docker and Run SonarQube as Container -xe\nsudo apt-get update\nsudo apt-get install docker.io -y\nsudo usermod -aG docker ubuntu\nsudo usermod -aG docker jenkins  \nnewgrp docker\nsudo chmod 777 /var/run/docker.sock\ndocker run -d --name sonar -p 9000:9000 sonarqube:lts-community # standard image of somarqube \"sonarqube:lts-community\"\n\n#install trivy -xe\nsudo apt-get install wget apt-transport-https gnupg lsb-release -y\nwget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg \u003e /dev/null\necho \"deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main\" | sudo tee -a /etc/apt/sources.list.d/trivy.list\nsudo apt-get update\nsudo apt-get install trivy -y\n\n",
            "vars": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_instance",
      "name": "bastion_server",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "ami": "ami-0e83be366243f524a",
            "arn": "arn:aws:ec2:us-east-2:846957663388:instance/i-0456f94ca965c1812",
            "associate_public_ip_address": true,
            "availability_zone": "us-east-2a",
            "capacity_reservation_specification": [
              {
                "capacity_reservation_preference": "open",
                "capacity_reservation_target": []
              }
            ],
            "cpu_core_count": 2,
            "cpu_options": [
              {
                "amd_sev_snp": "",
                "core_count": 2,
                "threads_per_core": 1
              }
            ],
            "cpu_threads_per_core": 1,
            "credit_specification": [
              {
                "cpu_credits": "standard"
              }
            ],
            "disable_api_stop": false,
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "get_password_data": false,
            "hibernation": false,
            "host_id": "",
            "host_resource_group_arn": null,
            "iam_instance_profile": "",
            "id": "i-0456f94ca965c1812",
            "instance_initiated_shutdown_behavior": "stop",
            "instance_lifecycle": "",
            "instance_market_options": [],
            "instance_state": "running",
            "instance_type": "t2.large",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "ansible-key",
            "launch_template": [],
            "maintenance_options": [
              {
                "auto_recovery": "default"
              }
            ],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_protocol_ipv6": "disabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "optional",
                "instance_metadata_tags": "disabled"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "placement_partition_number": 0,
            "primary_network_interface_id": "eni-093973cdd8eb193f7",
            "private_dns": "ip-172-31-13-196.us-east-2.compute.internal",
            "private_dns_name_options": [
              {
                "enable_resource_name_dns_a_record": false,
                "enable_resource_name_dns_aaaa_record": false,
                "hostname_type": "ip-name"
              }
            ],
            "private_ip": "172.31.13.196",
            "public_dns": "ec2-3-146-255-38.us-east-2.compute.amazonaws.com",
            "public_ip": "3.146.255.38",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/sda1",
                "encrypted": false,
                "iops": 120,
                "kms_key_id": "",
                "tags": null,
                "tags_all": {},
                "throughput": 0,
                "volume_id": "vol-0f6b8cb8840361850",
                "volume_size": 40,
                "volume_type": "gp2"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [
              "default"
            ],
            "source_dest_check": true,
            "spot_instance_request_id": "",
            "subnet_id": "subnet-04818b0c468e0f466",
            "tags": {
              "Name": "Docker-Jenkins-Docker"
            },
            "tags_all": {
              "Name": "Docker-Jenkins-Docker"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": "4ab102c112977d629b40988ab5e745155fe50dc0",
            "user_data_base64": null,
            "user_data_replace_on_change": false,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-0527febd1d3efa583"
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwicmVhZCI6OTAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.template_file.install_script"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_security_group",
      "name": "Jenkins-VM-SG",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-2:846957663388:security-group/sg-086857ac4d865cc6b",
            "description": "Allow TLS inbound traffic",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-086857ac4d865cc6b",
            "ingress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "inbound rules",
                "from_port": 22,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 22
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "inbound rules",
                "from_port": 3000,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 3000
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "inbound rules",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 443
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "inbound rules",
                "from_port": 8080,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 8080
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "inbound rules",
                "from_port": 80,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 80
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "inbound rules",
                "from_port": 9000,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 9000
              }
            ],
            "name": "Jenkins-VM-SG",
            "name_prefix": "",
            "owner_id": "846957663388",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "Jenkins-VM-SG"
            },
            "tags_all": {
              "Name": "Jenkins-VM-SG"
            },
            "timeouts": null,
            "vpc_id": "vpc-0136ce724315bcb15"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    }
  ],
  "check_results": null
}
